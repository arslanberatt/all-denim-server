
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  address: 'address',
  contactPerson: 'contactPerson',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CalculationScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  packageType: 'packageType',
  fabricUnitPrice: 'fabricUnitPrice',
  cutProcess: 'cutProcess',
  sationProcess: 'sationProcess',
  washProcess: 'washProcess',
  printProcess: 'printProcess',
  wearProcess: 'wearProcess',
  accessoryProcess: 'accessoryProcess',
  buttonProcess: 'buttonProcess',
  laborCost: 'laborCost',
  laborCostInEUR: 'laborCostInEUR',
  materialCost: 'materialCost',
  overheadCost: 'overheadCost',
  profitMargin: 'profitMargin',
  subtotal: 'subtotal',
  commission: 'commission',
  tax: 'tax',
  totalPrice: 'totalPrice',
  eurRate: 'eurRate',
  eurRateUpdated: 'eurRateUpdated',
  createdAt: 'createdAt'
};

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  fabricPrice: 'fabricPrice',
  fabricMeter: 'fabricMeter',
  overhead050: 'overhead050',
  overhead51100: 'overhead51100',
  overhead101200: 'overhead101200',
  profit050: 'profit050',
  profit51100: 'profit51100',
  profit101200: 'profit101200',
  taxRate: 'taxRate',
  commRate: 'commRate',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.PackageType = exports.$Enums.PackageType = {
  PACKAGE_050: 'PACKAGE_050',
  PACKAGE_51100: 'PACKAGE_51100',
  PACKAGE_101200: 'PACKAGE_101200'
};

exports.Prisma.ModelName = {
  Company: 'Company',
  Calculation: 'Calculation',
  Settings: 'Settings'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/berat/development/all-denim-server/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/berat/development/all-denim-server/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Company {\n  id            Int      @id @default(autoincrement())\n  name          String\n  email         String?\n  address       String?\n  contactPerson String?\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  calculations Calculation[]\n}\n\nmodel Calculation {\n  id          Int         @id @default(autoincrement())\n  companyId   Int\n  packageType PackageType\n\n  fabricUnitPrice  Float\n  cutProcess       Float\n  sationProcess    Float\n  washProcess      Float\n  printProcess     Float\n  wearProcess      Float\n  accessoryProcess Float\n  buttonProcess    Float\n\n  laborCost      Float\n  laborCostInEUR Float\n  materialCost   Float\n  overheadCost   Float\n  profitMargin   Float\n  subtotal       Float\n  commission     Float\n  tax            Float\n  totalPrice     Float\n  eurRate        Float\n  eurRateUpdated DateTime\n\n  createdAt DateTime @default(now())\n  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)\n}\n\nmodel Settings {\n  id Int @id @default(autoincrement())\n\n  fabricPrice Float @default(3.16)\n  fabricMeter Float @default(1.5)\n\n  overhead050    Float @default(12.5)\n  overhead51100  Float @default(12.5)\n  overhead101200 Float @default(10)\n\n  profit050    Float @default(30)\n  profit51100  Float @default(25)\n  profit101200 Float @default(15)\n\n  taxRate  Float @default(20)\n  commRate Float @default(5)\n\n  updatedAt DateTime @updatedAt\n}\n\nenum PackageType {\n  PACKAGE_050\n  PACKAGE_51100\n  PACKAGE_101200\n}\n",
  "inlineSchemaHash": "fa6b77da46ef8efddfa00d9871ad75f872c92e0742d617148c779856b43c2e4f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactPerson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"calculations\",\"kind\":\"object\",\"type\":\"Calculation\",\"relationName\":\"CalculationToCompany\"}],\"dbName\":null},\"Calculation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"packageType\",\"kind\":\"enum\",\"type\":\"PackageType\"},{\"name\":\"fabricUnitPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"cutProcess\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sationProcess\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"washProcess\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"printProcess\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"wearProcess\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"accessoryProcess\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"buttonProcess\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"laborCost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"laborCostInEUR\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"materialCost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"overheadCost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"profitMargin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"commission\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tax\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"eurRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"eurRateUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CalculationToCompany\"}],\"dbName\":null},\"Settings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fabricPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"fabricMeter\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"overhead050\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"overhead51100\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"overhead101200\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"profit050\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"profit51100\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"profit101200\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"taxRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"commRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

